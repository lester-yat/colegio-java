/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package views;

import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import models.Alumno;
import models.AlumnoDAO;
import models.Conexion;
import models.Seguridad;
import models.Usuario;
import models.UsuarioDAO;

/**
 *
 * @author Asus
 */
public class AsgUA extends javax.swing.JFrame {

Conexion con = new Conexion();


    public AsgUA() {
        initComponents();
        cargarTablaAlumnos();
    }
    
    
      public void cargarTablaAlumnos() {
    AlumnoDAO alumnoDAO = new AlumnoDAO();
    List<Alumno> listarAlumnos = alumnoDAO.listarAlumnos();
    
    DefaultTableModel modeloTabla = (DefaultTableModel) Alumnos.getModel();
    modeloTabla.setRowCount(0);  // Limpiar la tabla antes de cargar nuevos datos
    
    for (Alumno alumno : listarAlumnos) {
        // Verificar si el padre ya tiene un usuario asignado
        if (!alumnoDAO.tieneUsuario(alumno.getId())) {
            Object[] fila = {
                    alumno.getId(),
                    alumno.getNombre(),
                    alumno.getApellido(),
                    alumno.getGrado()
            };
            modeloTabla.addRow(fila);
        }
    }
}

   
   
       public List<Integer> obtenerIdsSeleccionadosPadre() {
        int[] filasSeleccionadas = Alumnos.getSelectedRows();
        List<Integer> idsSeleccionados = new ArrayList<>();
        for (int fila : filasSeleccionadas) {
            int id = (int) Alumnos.getValueAt(fila, 0);
            idsSeleccionados.add(id);
        }
        System.out.println("IDs seleccionados en Padres: " + idsSeleccionados);
        return idsSeleccionados;
    }
    
       
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        asig = new javax.swing.JButton();
        user = new javax.swing.JTextField();
        pass = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        Alumnos = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        asig.setText("asignar");
        asig.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                asigActionPerformed(evt);
            }
        });

        Alumnos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(Alumnos);

        jLabel1.setText("Usuario");

        jLabel2.setText("Contarseña");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(168, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 615, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(147, 147, 147))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(126, 126, 126)
                                .addComponent(user, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(42, 42, 42)
                                .addComponent(pass, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(79, 79, 79)
                                .addComponent(asig)))
                        .addGap(176, 176, 176))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(82, 82, 82)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(user, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(asig)
                            .addComponent(pass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(jLabel2)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 91, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(83, 83, 83))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void asigActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_asigActionPerformed
        // TODO add your handling code here:
        
            String usuario = user.getText();
    String contrasenia = pass.getText();

    // Validar que los campos no estén vacíos
    if (usuario.isEmpty() || contrasenia.isEmpty()) {
        JOptionPane.showMessageDialog(this, "El usuario y la contraseña no deben estar vacíos");
        return;
    }

    // Obtener el ID del alumno seleccionado en la tabla de alumnos
    int filaSeleccionada = Alumnos.getSelectedRow();
    if (filaSeleccionada < 0) {
        JOptionPane.showMessageDialog(this, "Debe seleccionar un alumno en la tabla de alumnos");
        return;
    }

    // Obtener el ID del alumno seleccionado
    int alumnoId = (int) Alumnos.getValueAt(filaSeleccionada, 0);

    // Encriptar la contraseña usando el método de la clase Seguridad
    String contraseniaEncriptada = Seguridad.encriptarSHA256(contrasenia);

    // Asignar rol por defecto "alumno"
    String rol = "alumno";

    // Crear el objeto Usuario con los datos obtenidos
    Usuario nuevoUsuario = new Usuario();
    nuevoUsuario.setNombreUsuario(usuario);
    nuevoUsuario.setContrasenia(contraseniaEncriptada);
    nuevoUsuario.setRol(rol);
    nuevoUsuario.setAlumnoId(alumnoId);

    // Insertar el nuevo usuario en la base de datos
    UsuarioDAO usuarioDAO = new UsuarioDAO();
    try {
        usuarioDAO.insertarUsuario(nuevoUsuario);

        // Confirmación de la asignación
        JOptionPane.showMessageDialog(this, 
            "Usuario asignado correctamente.\nUsuario: " + usuario + "\nContraseña: " + contrasenia,
            "Asignación exitosa", 
            JOptionPane.INFORMATION_MESSAGE);
        
        // Limpiar campos de texto
        user.setText("");
        pass.setText("");

        // Recargar la tabla para reflejar los cambios (si aplicable)
        cargarTablaAlumnos();

    } catch (SQLException e) {
        JOptionPane.showMessageDialog(this, "Error al asignar usuario: " + e.getMessage());
    }
        
    }//GEN-LAST:event_asigActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AsgUA.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AsgUA.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AsgUA.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AsgUA.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AsgUA().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Alumnos;
    private javax.swing.JButton asig;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField pass;
    private javax.swing.JTextField user;
    // End of variables declaration//GEN-END:variables
}
